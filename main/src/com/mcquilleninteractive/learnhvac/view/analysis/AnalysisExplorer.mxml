<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
		xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"  
		xmlns:analysis="com.mcquilleninteractive.learnhvac.view.analysis.*" 
		xmlns:graphing="com.mcquilleninteractive.learnhvac.view.graphing.*"
		xmlns:head="com.mcquilleninteractive.learnhvac.view.layout.*"
		xmlns:s="library://ns.adobe.com/flex/spark"
		styleName="glassPods"	
		xmlns:myComps="*"
		creationComplete="onCC()"
		paddingLeft="5"
		paddingRight="5"
		paddingBottom="10"
		paddingTop="10"
		>

	 	<fx:Script>
	 		<![CDATA[
				import com.mcquilleninteractive.learnhvac.event.ScenarioDataLoadedEvent;
				import com.mcquilleninteractive.learnhvac.model.ApplicationModel;
				import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel;
				import com.mcquilleninteractive.learnhvac.model.ShortTermSimulationDataModel;
				import com.mcquilleninteractive.learnhvac.model.data.*;
				import com.mcquilleninteractive.learnhvac.util.Logger;
				import fl.controls.Button;
				import mx.collections.XMLListCollection;
				import mx.events.DragEvent;
				import mx.managers.DragManager;
			
				private var tabShortTerm : mx.controls.Button;
				private var tabLongTerm : mx.controls.Button;
				
			
			public function onCC():void
			{
				

				
				tabShortTerm = tabNav.getTabAt(0);
				tabLongTerm = tabNav.getTabAt(1);
				
				tabShortTerm.enabled = false;
				tabLongTerm.enabled = false;
				
				navigatorLongTermRun1.enabled = false;
				navigatorLongTermRun2.enabled = false;
				
				navigatorShortTermRun1.enabled = false;
				navigatorShortTermRun2.enabled = false;
				
				tabShortTerm.toolTip = "There are no short-term results to display";
				tabLongTerm.toolTip = "There are no long-term results to display";
				

			}
			
			
 			[Mediate(event="ScenarioDataLoadedEvent.MODELICA_SYSVARS_LOADED")]
			public function onModelicaSysvarsLoaded(event:ScenarioDataLoadedEvent):void
			{				
				var graphDataModel:IGraphDataModel = event.graphDataModel
				
				//for now we're just expecting "run1" and "run2"
				//but later we might want to support multiple models
				
				switch(event.graphDataModelID)
				{
					case ShortTermSimulationDataModel.RUN_1:
						shortTermRun1.init(graphDataModel)
						break
					case ShortTermSimulationDataModel.RUN_2:
						shortTermRun2.init(graphDataModel)
						break
				}	
				
			}
			
			[Mediate(event="ScenarioDataLoadedEvent.MODELICA_RESULTS_PARSED")]
			public function onModelicaDataParsed(event:ScenarioDataLoadedEvent):void
			{				
				var graphDataModel:IGraphDataModel = event.graphDataModel
				
				//for now we're just expecting "run1" and "run2"
				//but later we might want to support multiple models
				//isShortTermEnabled = true;
					
				if (!tabShortTerm.enabled) {
					tabShortTerm.enabled = true;
					tabShortTerm.toolTip = "Short-term simulation results";
				}

				
				switch(event.graphDataModelID)
				{
					case ShortTermSimulationDataModel.RUN_1:
						shortTermRun1.loadData(graphDataModel)
						
						if (!navigatorShortTermRun1.enabled) {
							navigatorShortTermRun1.enabled = true;
							navigatorShortTermRun1.toolTip = "Result Set: Run 1";
						}
						break
					case ShortTermSimulationDataModel.RUN_2:
						shortTermRun2.loadData(graphDataModel)
						
						if (!navigatorShortTermRun2.enabled) {
							navigatorShortTermRun2.enabled = true;
							navigatorShortTermRun2.toolTip = "Result Set: Run 2";
						}
						break
				}	
				
			}
			
			
 			[Mediate(event="ScenarioDataLoadedEvent.ENERGY_PLUS_RESULTS_PARSED")]
			public function onEPlusDataParsed(evt:ScenarioDataLoadedEvent):void
			{
				
				
				if (!tabLongTerm.enabled) {
					tabLongTerm.enabled = true;
					tabLongTerm.toolTip = "Long-term simulation results";
				}
				
				var event:ScenarioDataLoadedEvent = ScenarioDataLoadedEvent(evt)
				var graphDataModel:IGraphDataModel = event.graphDataModel
				
				//for now we're just expecting "run1" and "run2"
				//but later we might want to support multiple models
				
				switch(event.graphDataModelID)
				{
					case LongTermSimulationDataModel.RUN_1:
						
						if (!navigatorLongTermRun1.enabled) {
							navigatorLongTermRun1.enabled = true;
							navigatorLongTermRun1.toolTip = "Result Set: Run 1";
						}

						longTermRun1.loadData(graphDataModel);
						break
					case LongTermSimulationDataModel.RUN_2:

						if (!navigatorLongTermRun2.enabled) {
							navigatorLongTermRun2.enabled = true;
							navigatorLongTermRun2.toolTip = "Result Set: Run 2";
						}
						
						longTermRun2.loadData(graphDataModel);
						break
				}	
				
			}  
			

				
		 			
	 		]]>
	 	</fx:Script>
	
	
	
	<mx:TabNavigator id="tabNav" 
					 height="100%" 
					 width="100%" 
					 tabWidth="100"
					 styleName="tabNavigator">
		
		
		

		<mx:VBox 
			label="Short-term"
			id="shortTermTab"
			styleName="simulationResultsVbox"
			height="100%" 
			width="100%"
			>		
				
			
			<mx:ToggleButtonBar dataProvider="{shortTermViewStack}" 
								buttonStyleName="myToggleButtonBar" 
								/> 
			
			
			<mx:ViewStack id="shortTermViewStack" 
						   width="100%" height="100%"> 
				
				<s:NavigatorContent 
					id="navigatorShortTermRun1" 
					label="Run 1" 
					width="100%" 
					height="100%" 
					> 
					
					<analysis:AnalysisShortTermOutputView 
						id="shortTermRun1" 
						title="Run 1"
						runID="{ShortTermSimulationDataModel.RUN_1}"
						label="Run 1" 
						width="100%" 
						height="100%"/>
					
				</s:NavigatorContent> 
				
				<s:NavigatorContent 
					id="navigatorShortTermRun2" 
					label="Run 2" 
					width="100%" 
					height="100%"> 
					
					<analysis:AnalysisShortTermOutputView 
						id="shortTermRun2" 
						runID="{ShortTermSimulationDataModel.RUN_2}"
						title="Run 2"
						label="Run 2" 
						width="100%" 
						height="100%"/>
					
				</s:NavigatorContent> 
				

			</mx:ViewStack> 
			
			
		</mx:VBox>
		
		
		<mx:VBox 
			label="Long-term"
			id="longTermTab"
			styleName="simulationResultsVbox"
			height="100%" 
			width="100%" 
			>
			

		<mx:ToggleButtonBar dataProvider="{longTermViewStack}" 
							buttonStyleName="myToggleButtonBar" 
							/> 
		
		
		<mx:ViewStack id="longTermViewStack" 
					  width="100%" height="100%"> 
			
			<s:NavigatorContent 
				id="navigatorLongTermRun1" 
				label="Run 1" 
				width="100%" 
				height="100%"
				> 
				
				<analysis:AnalysisShortTermOutputView id="longTermRun1" 
													  toolTip="Long-term Simulation Run 1" 
													  title="Run 1"
													  runID="{LongTermSimulationDataModel.RUN_1}"
													  label="Run 1" 
													  width="100%" height="100%"/>
				
			</s:NavigatorContent> 
			
			<s:NavigatorContent 
				id="navigatorLongTermRun2" 
				label="Run 2" 
				width="100%" 
				height="100%"
				>
				
				<analysis:AnalysisShortTermOutputView id="longTermRun2" 
													  runID="{LongTermSimulationDataModel.RUN_2}"
													  toolTip="Long-term Simulation Run 2" 
													  title="Run 2"
													  label="Run 2" 
													  width="100%" height="100%"/>
			</s:NavigatorContent> 
			
			
		</mx:ViewStack> 
		
		
	</mx:VBox>
		


		

		
	</mx:TabNavigator>
	
	

	 	
	 	
</mx:VBox>
