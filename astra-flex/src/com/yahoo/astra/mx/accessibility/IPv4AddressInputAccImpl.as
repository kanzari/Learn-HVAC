/*
Copyright (c) 2009 Yahoo! Inc.  All rights reserved.  
The copyrights embodied in the content of this file are licensed under the BSD (revised) open source license
*/
ï»¿package com.yahoo.astra.mx.accessibility {	import com.yahoo.astra.accessibility.EventTypes;	import com.yahoo.astra.accessibility.ObjectRoles;	import com.yahoo.astra.accessibility.ObjectStates;	import com.yahoo.astra.mx.controls.IPv4AddressInput;		import flash.accessibility.Accessibility;	import flash.events.Event;		import mx.accessibility.AccImpl;	import mx.core.UIComponent;		/**	 * The IPv4AddressInputAccImpl class is used to make a IPv4AddressInput component accessible.	 * 	 * <p>A IPv4AddressInput reports the role <code>ROLE_SYSTEM_TEXT</code> to a screen 	 * reader. </p>	 * 	 * @author Alaric Cole     *	 */	public class IPv4AddressInputAccImpl extends AccImpl 	{		//--------------------------------------------------------------------------		//  Class initialization		//--------------------------------------------------------------------------	        /**         * @private         * Static variable triggering the <code>hookAccessibility()</code> method.         * This is used for initializing IPv4AddressInputAccImpl class to hook its         * <code>createAccessibilityImplementation()</code> method to IPv4AddressInput class          * before it gets called from UIComponent.         */		private static var accessibilityHooked:Boolean = hookAccessibility();        /**         * @private         * Static method for swapping the <code>createAccessibilityImplementation()</code>         * method of IPv4AddressInput with the IPv4AddressInputAccImpl class.         */		private static function hookAccessibility():Boolean 		{			IPv4AddressInput.createAccessibilityImplementation = createAccessibilityImplementation;			return true;		}				/**		 *  @private         *		 *  Method for creating the Accessibility class.         *  This method is called from UIComponent.         *		 */		public static function createAccessibilityImplementation(component:UIComponent):void 		{			component.accessibilityImplementation = new IPv4AddressInputAccImpl(component);		}			/**		 *  Enables accessibility for a IPv4AddressInput component.		 *  This method is required for the compiler to activate         *  the accessibility classes for a component.         *		 */		public static function enableAccessibility():void 		{						//		}				//--------------------------------------------------------------------------		//  Constructor		//--------------------------------------------------------------------------	        /**		 *  Creates a new IPv4AddressInput Accessibility Implementation.		 *		 *  @param master The UIComponent instance that this AccImpl instance         *  is making accessible.         *		 */		public function IPv4AddressInputAccImpl(master:UIComponent) 		{			super(master);			role = ObjectRoles.ROLE_SYSTEM_TEXT;					}						/**		 *  @inheritDoc		 */		override protected function get eventsToHandle():Array 		{			return super.eventsToHandle.concat([ "change", "valueCommit" ]);		}		/**		 *  @inheritDoc		 */		override public function get_accRole(childID:uint):uint 		{						return role;		}			/**		 *  @private		 *  IAccessible method for returning the value of the IPv4AddressInput		 *  (which would be the text of the item selected).		 *  The IPv4AddressInput should return the content of the TextField as the value.		 *		 *  @param childID uint		 *         *  @return Value string         *         * @langversion 3.0         * @playerversion Flash 9.0.28.0		 */		override public function get_accValue(childID:uint):String 		{			//if (childID == 0) {				return IPv4AddressInput(master).value.toString();			//}			//return null;		}						/**		 *  @inheritDoc		 */		override public function get_accState(childID:uint):uint 		{			var accState:uint = getState(childID);			if (childID > 0) {				accState |= ObjectStates.STATE_SYSTEM_SELECTABLE;				accState |= ObjectStates.STATE_SYSTEM_SELECTED | ObjectStates.STATE_SYSTEM_FOCUSED;							}						return accState;		}			/**		 *  @inheritDoc		 */		override public function getChildIDArray():Array 		{			var childIDs:Array = [];						return childIDs;		}					/**		 *  @inheritDoc		 */		override protected function getName(childID:uint):String 		{			var name:String = "IP Address Input";								return name + " " + (super.getName(childID)!=null?super.getName(childID):"") + get_accValue(childID);		}			/**		 *  @inheritDoc		 */		override protected function eventHandler(event:Event):void 		{			  switch (event.type) 			  {				case "change":										Accessibility.sendEvent(master, 0,										EventTypes.EVENT_OBJECT_FOCUS);					Accessibility.sendEvent(master, 0, EventTypes.EVENT_OBJECT_SELECTION);					Accessibility.sendEvent(master, 0, EventTypes.EVENT_OBJECT_VALUECHANGE);					Accessibility.updateProperties();															break;									case "valueCommit":										Accessibility.sendEvent(master, 0, EventTypes.EVENT_OBJECT_VALUECHANGE);										break;			}  		}	}}